// This Source Code Form is subject to the terms of the Mozilla Public
// License, v2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/

export const panelSettings = {
  importOrExportSettings: "Import/export settings",
  panelSettings: "panel settings",
  noLayoutSelected: "<selectLayoutLink>Select a layout</selectLayoutLink> to get started!",
  selectAPanelToEditItsSettings: "Select a panel to edit its settings.",
  loadingPanelSettings: "Loading panel settings...",
  currentSettingsPanelName: "{{title}} panel settings",
  panelName: "{{title}} panel",
  panelNoAnySettings: "{{panelTitle}} panel does not have any settings",
  panelTitle: "The {{title}}",
  this: "This",
  resetToDefault: "Reset to default",
  searchPanelSettings: "Search panel settings…",
  clearSearch: "Clear search",
  frame: "Frame",
  displayFrame: "Display frame",
  displayFrameHelp:
    "The coordinate frame to place the camera in. The camera position and orientation will be relative to the origin of this frame.",
  followMode: "Follow mode",
  followModeHelp: "Change the camera behavior during playback to follow the display frame or not.",
  scene: "Scene",
  reset: "Reset",
  renderStats: "Render stats",
  background: "Background",
  labelScale: "Label scale",
  labelScaleHelp: "Scale factor to apply to all labels",
  ignoreColladaUpAxis: "Ignore COLLADA <up_axis>",
  ignoreColladaUpAxisHelp:
    "Match the behavior of rviz by ignoring the <up_axis> tag in COLLADA files",
  takeEffectAfterReboot: "This setting requires a restart to take effect",
  syncCamera: "Sync camera",
  syncCameraHelp: "Sync the camera with other panels that also have this setting enabled.",
  meshUpAxis: "Mesh up axis",
  meshUpAxisHelp:
    "The direction to use as “up” when loading meshes without orientation info (STL and OBJ)",
  YUp: "Y-up",
  ZUp: "Z-up",
  view: "View",
  distance: "Distance",
  perspective: "Perspective",
  target: "Target",
  theta: "Theta",
  phi: "Phi",
  fovy: "Y-Axis FOV",
  near: "Near",
  far: "Far",
  publish: "Publish",
  type: "Type",
  typeHelp: "The type of message to publish when clicking in the scene",
  pointOptionOfType: "Point (geometry_msgs/Point)",
  poseOptionOfType: "Pose (geometry_msgs/PoseStamped)",
  poseEstimateOptionOfType: "Pose estimate (geometry_msgs/PoseWithCovarianceStamped)",
  topic: "Topic",
  topicHelp: "The topic on which to publish {{publishType}}",
  point: "points",
  poses: "poses",
  poseEstimate: "pose estimates",
  xDeviation: "X deviation",
  xDeviationHelp: "The X standard deviation to publish with pose estimates",
  yDeviation: "Y deviation",
  yDeviationHelp: "The Y standard deviation to publish with pose estimates",
  thetaDeviation: "Theta deviation",
  thetaDeviationHelp: "The theta standard deviation to publish with pose estimates",
  pose: "Pose",
  position: "Position",
  fixed: "Fixed",
  settings: "Settings",
  editable: "Editable",
  labels: "Labels",
  labelSize: "Label size",
  axisScale: "Axis scale",
  lineWidth: "Line width",
  lineColor: "Line color",
  enablePreloading: "Enable preloading",
  showAll: "Show All",
  hideAll: "Hide All",
  transforms: "Transforms",
  filterList: "Filter list",
  filterListHelp: "Filter list by visibility",
  listAll: "List all",
  listVisible: "List visible",
  listInvisible: "List invisible",
  customLayers: "Custom Layers",
  size: "Size",
  divisions: "Divisions",
  color: "Color",
  rotation: "Rotation",
  grid: "Grid",
  delete: "Delete",
  addGrid: "Add Grid",
  addURDF: "Add URDF",
  maxYError: "Y max must be greater than Y min.",
  general: "General",
  maxXError: "X max must be greater than X min.",
  syncWithOtherPlots: "Sync with other plots",
  legend: "Legend",
  floating: "Floating",
  left: "Left",
  top: "Top",
  hidden: "Hidden",
  showValues: "Show values",
  yAxis: "Y Axis",
  showLabels: "Show labels",
  min: "Min",
  max: "Max",
  xAxis: "X Axis",
  value: "Value",
  timestamp: "Timestamp",
  index: "Index",
  currentPath: "Path (current)",
  accumulatedPath: "Path (accumulated)",
  messagePath: "Message path",
  secondsRange: "Range (seconds)",
  series: "Series",
  addSeries: "Add series",
  label: "Label",
  receiveTime: "Receive Time",
  headerStamp: "Header Stamp",
  deleteSeries: "Delete series",
  topicError: "Topic {{topic}} is not available",
};
